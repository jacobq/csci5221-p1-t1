Data Aggregation & Analysis System for Intelligent Agriculture
TEAM ID 1
Team Members: 
Panagiotis Stanitsas
Nabil Cheik
Jacob Quant
Proposal:

Project Goal: Our team intends to develop a system capable of collecting moisture measurements over time, generating heat-map visualizations of this data, and interactively presenting that information to users via an Android application.
Project Motivation: Due to rising interest in ÎéÎíBig DataÎéÎí and the ÎéÎíInternet of Things,ÎéÎí there are many applications for a system capable of collecting and analyzing information from many sources on demand. However, for this project we choose to focus on replicating a particular scenario spanning the area of Precision Agriculture. In order for commercial farmers to maximize their profitability they must know how to most effectively utilize their resources. By installing low-cost moisture sensors at key locations in their fields, farmers can monitor the condition of the soil and plan their irrigation strategies accordingly so as to reduce the amount of water required.
Plan: The proposed methodology has three discrete components. The first is concerned with the sensorsÎéÎ÷ deployment as well as the collection of measurements in the field. In a real application there would be physical sensors at known locations communicating with nearby agent that would then transmit their measurement data to a central server. For the purposes of this study, however, the sensor data will be simulated using historical weather records, mathematical models, or appropriately selected random number generators since the short time frame does not allow for experimentation with actual hardware components. The simulator will allow configuration of the imaginary sensor locations and sampling rates and then connect to the server to provide the corresponding simulated measurements over time.
The second component consists of the software running on the server and performs these major functions:
Collecting and storing measurement data
Numerically analyzing portions of this data according to user input
Generating a visualization (image or animation/video)
Communicating with the client application (processing request parameters & delivering the corresponding visualization)
The last component of this implementation refers to the client (Android device) that is responsible for submitting the userÎéÎ÷s queries and displaying the results from the server. It will allow the user to input a time frame and region of interest, send this information in a request to the server, and present the serverÎéÎ÷s response (e.g. heat-map image or animation).
Our team will be utilizing personal computers to run one or more instances of the simulation component and send measurements to the server. We plan to use either hosted solutions (such as Amazon Web Services, Digital Ocean, etc.) or an additional local computer to run a single instance of the server component. (Although we only plan to run one instance for demonstration purposes, we will design the server component with the understanding that it should be scalable.) We anticipate using a NoSQL database such as MongoDB to store and index the collected data on the server. As for the client, we would like to first explore using a native Android application to interact with the user and communicate with the server. However, we might pursue a more general web-browser-based application in order to leverage richer user interface capabilities. The data analysis module of the server component will be implemented in Python and will be responsible for deriving estimated measurements for a geographical area based on point measurements. Its output will be an image of the heat map representing moisture levels across the selected region of the field during the corresponding time frame. The set of images corresponding to the queried time frames will be then compiled in an animation or video file and transmitted to the client. 
